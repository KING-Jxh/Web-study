1、String 字符串对象;var 字符串名 = "XXXXX";
	访问字符串对象的属性length:
	stringObject.length; 返回该字符串的长度。列如：
	var mystr="Hello World!";
	var myl=mystr.length;
	以上代码执行后，myl 的值将是：12

	访问字符串对象的方法：
	使用 String 对象的 toUpperCase() 方法来将字符串小写字母转换为大写：
	var mystr="Hello world!";
	var mynum=mystr.toUpperCase();
	以上代码执行后，mynum 的值是：HELLO WORLD!	



	2、返回指定位置的字符：  charAt() 方法可返回指定位置的字符。返回的字符是长度为 1 的字符串。
	语法:stringObject.charAt(index)      （参数说明：index：必需。表示字符串中某个位置的数字，即字符在字符串的下标）
	注意：1.字符串中第一个字符的下标是 0。最后一个字符的下标为字符串长度减一（string.length-1）。
	如果参数 index 不在 0 与 string.length-1 之间，该方法将返回一个空字符串。
	如:在字符串 "I love JavaScript!" 中，返回位置2的字符：
	<script type="text/javascript">
  	var mystr="I love JavaScript!"
  	document.write(mystr.charAt(2));
	</script>  //以上代码的运行结果：l
	注意：一个空格也算一个字符。




	3、返回指定的字符串首次出现的位置
	indexOf() 方法可返回某个指定的字符串值在字符串中首次出现的位置。
	语法：stringObject.indexOf(substring, startpos)     （参数说明：subatring：必需，规定需要检索的字符串值   /    startpos  ： 可选的整数参数。规定在字符串中开始检索的位置。它的合法取值是0到stringObject.length - 1。如省略该参数,则将从字符串的首字符开始检索。）

	说明：1.该方法将从头到尾地检索字符串 stringObject，看它是否含有子串 substring。
	2.可选参数，从stringObject的startpos位置开始查找substring，如果没有此参数将从stringObject的开始位置查找。
	3.如果找到一个 substring，则返回 substring 的第一次出现的位置。stringObject 中的字符位置是从 0 开始的。

	注意：1.indexOf() 方法区分大小写。
	2.如果要检索的字符串值没有出现，则该方法返回 -1。
	例如: 对 "I love JavaScript!" 字符串内进行不同的检索：
	<script type="text/javascript">
	  var str="I love JavaScript!"
  	document.write(str.indexOf("I") + "<br />");
	  document.write(str.indexOf("v") + "<br />");
 	 document.write(str.indexOf("v",8));
	</script>
	以上代码的输出：0   4   9



	4、字符串分割split() 方法将字符串分割为字符串数组，并返回此数组。
	语法：stringObject.split(separator,limit)       (参数说明:separator:  必需，从该指定的地方分割stringObgect  /  limit :可选参数，分割的次数，如设置该参数，返回的子串不会多于这个参数指定的数组，如果无此参数为不限制次数）

	注意：如果把空字符串 ("") 用作 separator，那么 stringObject 中的每个字符之间都会被分割。

	我们将按照不同的方式来分割字符串：使用指定符号分割字符串，代码如下:
	var mystr = "www.imooc.com";
	document.write(mystr.split(".")+"<br>");
	document.write(mystr.split(".", 2)+"<br>");
	运行结果:www,imooc,com          www,imooc

	将字符串分割为字符，代码如下：
	document.write(mystr.split("")+"<br>");
	document.write(mystr.split("", 5));
	运行结果:  w,w,w,.,i,m,o,o,c,.,c,o,m        w,w,w,.,i

	


	5、提取字符串substring()方法用于提取字符串中介于两个指定下标之间的字符。		
	语法:stringObject.substring(startPos,stopPos)    （参数说明:startPosi必需。一个非负的整数，开始位置。  /   stopPos可选。一个非负的整数，结束位置，如果省略该参数，那么返回的子串会一直到字符串对象的结尾。）

	注意：1. 返回的内容是从 start开始(包含start位置的字符)到 stop-1 处的所有字符，其长度为 stop 减start。
	2. 如果参数 start 与 stop 相等，那么该方法返回的就是一个空串（即长度为 0 的字符串）。
	3. 如果 start 比 stop 大，那么该方法在提取子串之前会先交换这两个参数。

	使用 substring() 从字符串中提取字符串，代码如下：
	<script type="text/javascript">
  	var mystr="I love JavaScript";
 	 document.write(mystr.substring(7));
 	 document.write(mystr.substring(2,6));
	</script>    //运行结果:   JavaScript      love




	6、提取指定数目的字符substr() 方法从字符串中提取从 startPos位置开始的指定数目的字符串。
	语法:stringObject.substr(startPos,length)    （参数说明：startPos，必需。要提取的子串的起始位置。必须是数值。    /   length：可选。提取字符串的长度。如果省略，返回从stringObject的开始位置startPos到stringObject的结尾的字符。

	注意：如果参数startPos是负数，从字符串的尾部开始算起的位置。也就是说，-1 指字符串中最后一个字符，-2 指倒数第二个字符，以此类推。如果startPos为负数且绝对值大于字符串长度，startPos为0。使用 substr() 从字符串中提取一些字符，代码如下：
	<script type="text/javascript">
  	var mystr="I love JavaScript!";
  	document.write(mystr.substr(7));
 	 document.write(mystr.substr(2,4));
	</script>    //运行结果：JavaScript!   love